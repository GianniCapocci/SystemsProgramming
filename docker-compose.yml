services:
  web:
    build: .
    container_name: flask_app
    command: ./start.sh
    environment:
      - FLASK_APP=src.app.py
      - FLASK_RUN_HOST=0.0.0.0
    ports:
      - "8080:8080"
    depends_on:
      mysql_db:
        condition: service_healthy
      kafka:
        condition: service_started

  mysql_db:
    image: mysql:8.0
    restart: always
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: systems_programming
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p$$MYSQL_ROOT_PASSWORD","--protocol","tcp" ]
      start_period: 180s
      timeout: 240s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  mysql_data:

networks:
  default:
    driver: bridge
    name: my_network
